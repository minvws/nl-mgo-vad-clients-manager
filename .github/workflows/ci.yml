name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ develop ]
    tags: [ v* ]

jobs:
  CI:
    env:
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PASSWORD: postgres
      DB_USERNAME: postgres
      DB_DATABASE: postgres
      DB_PORT: 5432
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
          cache-dependency-path: "**/package-lock.json"

      - name: Install npm dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=$NODE_AUTH_TOKEN"  >> ~/.npmrc
          npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.REPO_READ_ONLY_TOKEN }}

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: pgsql
          coverage: pcov

      - name: Copy env
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: Composer install
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.REPO_READ_ONLY_TOKEN }}"}}'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare application
        run: php artisan key:generate

      - name: Npm build
        run: npm run build

      - name: Clear Config
        run: php artisan config:clear

      - name: Run Migration
        run: php artisan migrate:fresh

      - name: Phpcs
        run: composer phpcs

      - name: Phpstan
        run: composer phpstan

      - name: Phpmd
        run: composer phpmd

      - name: Phpunit
        run: composer test-ci

      - name: Run SonarQube Cloud scanner
        uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/sonarcloud@main
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
